version: 2.1
description: "Tools for running documentation commands"

jobs:
  code:
    description: >
      Build Sphinxdocs for a source folder.
    docker:
      - image: python:3.7.6-alpine
    parameters:
      folder:
        default: '.'
        description: >
          Path to the folder containing the Python package.
        type: string
      installable:
        default: false
        description: |
          If true, runs `pip install -e <<folder>>/`.
          If false, runs `pip install -r <<folder>>/requirements.txt`.
        type: boolean
    steps:
      - run: python3 -m pip install sphinx
      - checkout
      - when:
          condition: <<parameters.installable>>
          steps:
            - run: pip install -e <<parameters.folder>>/
      - unless:
          condition: <<parameters.installable>>
          steps:
            - run: pip install -r <<parameters.folder>>/requirements.txt
      - run: sphinx-apidoc -M -e -f -o /docs-code-build <<parameters.folder>>
      - run: rm -f /docs-code-build/conf.rst  # TODO: only if <<folder>> is `.`?
      - when:
          condition: <<parameters.installable>>
          steps:
            - run: rm -f /docs-code-build/setup.rst
      # TODO: we should nuke these if we want other folks to use this
      - run: rm -f /docs-code-build/modules.rst
      - run: rm -f /docs-code-build/voiceai.rst
      # END TODO
      - persist_to_workspace:
          root: /docs-code-build
          paths:
            - ./*

  compile-and-upload:
    description: >
      Compile Sphinxdocs from a docs folder, then deploy it to Google Storage
      (ie. for internal use only).
    docker:
      - image: python:3.7.6-alpine
    parameters:
      code_dir:
        description: >
          Path to the folder where we will mount any compiled code docs (eg.
          `./docs/code`). The assumption would be that you've linked to this
          directory from your `index.rst`.
        type: string
      creds:
        default: GCLOUD_SERVICE_KEY
        description: >
          Name of environment variable storing the base64-encoded service key
          for the GCP project.
        type: env_var_name
      folder:
        default: '.'
        description: >
          Path to the folder containing the Sphinx entrypoint (eg. the
          `conf.py` and `index.rst`).
        type: string
      gcp_project:
        description: The Google project ID to connect with via the gcloud CLI.
        type: string
      project:
        default: ${CIRCLE_PROJECT_REPONAME}
        description: |
          The name of the project folder in GCS.
        type: string
    steps:
      - run: python3 -m pip install sphinx
      - checkout
      - when:
          condition: <<parameters.code_dir>>
          steps:
            - attach_workspace:
                at: /docs-code-build
            - run: mkdir -p <<parameters.code_dir>>
            - run: cp -r /docs-code-build/* <<parameters.code_dir>>/
      - run: sphinx-build -M html <<parameters.folder>>/ build/
      # TODO: this should probably get moved to eg. `gcloud/deploy-to-gcs`
      - gcloud/install
      - gcloud/auth:
          creds: <<parameters.creds>>
          project: <<parameters.gcp_project>>
      - run:
          name: nuke pre-existing docs
          command: |
            gsutil -m rm -r gs://<<parameters.gcp_project>>-docs/<<parameters.project>>/ ||:
      - run: gsutil -m cp -r build/html/* gs://<<parameters.gcp_project>>-docs/<<parameters.project>>/
      # END TODO

orbs:
  gcloud: talkiq/gcloud@1
